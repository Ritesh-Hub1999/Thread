1)if we want to synchronize the thread in
some point we use condition varaible.
a) Notify other thread
b) waiting for some conditions

2)Condition variable are used for 2 
  purpose
  a) notify_one();
  b) notify_all();
 
 We need mutex to use condition variable
 
 3) if thread want to wait on some cond
    it acquire the mutex lock using 
    unique_lock.
    
 code:
 -----
 #include <iostream>
#include <thread>
#include <mutex>
#include <condition_variable>
using namespace std;

condition_variable cv;
mutex m;
int balance = 0;

bool check(){
    if(balance != 0){
        return true;
    }
    else {
        return false;
    }
}

void addMoney(int money){
    unique_lock<mutex> lock1(m);
    balance += money;
    cout<<"Amount added in current balance: "<<balance<<endl;
    cv.notify_one();
}

void withDrowMoney(int money){
    unique_lock<mutex> lock2(m);
    cv.wait(lock2,check);
    if(balance >= money){
        balance -= money;
        cout<<"Amount Deducted: "<< money <<endl;
    }else{
        cout<< "Amount can't be Deducted,balance is less than" << money<<endl;
    }
    
    cout << "current balance is: "<<balance<<endl;
}

int main(){
    thread t1(withDrowMoney,600);
    thread t2(addMoney, 500);
    t1.join();
    t2.join();
}
